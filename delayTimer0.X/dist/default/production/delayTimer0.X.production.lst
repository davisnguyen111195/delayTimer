

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 24 14:53:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0008                     _PORTD	set	8
   168  0001                     _TMR0	set	1
   169  000B                     _INTCONbits	set	11
   170  0088                     _TRISD	set	136
   171  0081                     _OPTION_REGbits	set	129
   172                           
   173                           	psect	cinit
   174  000F                     start_initialization:	
   175                           ; #config settings
   176                           
   177  000F                     __initialization:
   178                           
   179                           ; Clear objects allocated to COMMON
   180  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   181  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   182  0011                     end_of_initialization:	
   183                           ;End of C runtime variable initialization code
   184                           
   185  0011                     __end_of__initialization:
   186  0011  0183               	clrf	3
   187  0012  120A  118A  2837   	ljmp	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMMON
   190  0070                     __pbssCOMMON:
   191  0070                     ISR@counter:
   192  0070                     	ds	2
   193                           
   194                           	psect	cstackCOMMON
   195  0072                     __pcstackCOMMON:
   196  0072                     ?_ISR:
   197  0072                     ??_ISR:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0072                     ?_main:	
   201                           ; 1 bytes @ 0x0
   202                           
   203                           
   204                           ; 1 bytes @ 0x0
   205  0072                     	ds	2
   206  0074                     ??_main:
   207                           
   208                           	psect	maintext
   209  0037                     __pmaintext:	
   210                           ; 1 bytes @ 0x2
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 25 in file "main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		status,2
   225 ;; Tracked objects:
   226 ;;		On entry : B00/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   230 ;;      Params:         0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0
   233 ;;      Totals:         0       0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels required when called: 1
   236 ;; This function calls:
   237 ;;		Nothing
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           
   244                           ;psect for function _main
   245  0037                     _main:
   246  0037                     l631:	
   247                           ;incstack = 0
   248                           ; Regs used in _main: [status,2]
   249                           
   250                           
   251                           ;main.c: 26:     OPTION_REGbits.T0CS = 0;
   252  0037  1683               	bsf	3,5	;RP0=1, select bank1
   253  0038  1303               	bcf	3,6	;RP1=0, select bank1
   254  0039  1281               	bcf	1,5	;volatile
   255                           
   256                           ;main.c: 27:     OPTION_REGbits.PSA = 0;
   257  003A  1181               	bcf	1,3	;volatile
   258                           
   259                           ;main.c: 28:     OPTION_REGbits.PS2 = 0;
   260  003B  1101               	bcf	1,2	;volatile
   261                           
   262                           ;main.c: 29:     OPTION_REGbits.PS1 = 1;
   263  003C  1481               	bsf	1,1	;volatile
   264                           
   265                           ;main.c: 30:     OPTION_REGbits.PS0 = 0;
   266  003D  1001               	bcf	1,0	;volatile
   267                           
   268                           ;main.c: 31:     INTCONbits.GIE = 1;
   269  003E  178B               	bsf	11,7	;volatile
   270                           
   271                           ;main.c: 32:     INTCONbits.T0IE = 1;
   272  003F  168B               	bsf	11,5	;volatile
   273                           
   274                           ;main.c: 33:     INTCONbits.T0IF = 0;
   275  0040  110B               	bcf	11,2	;volatile
   276  0041                     l633:
   277                           
   278                           ;main.c: 34:     TRISD = 0;
   279  0041  0188               	clrf	8	;volatile
   280                           
   281                           ;main.c: 35:     PORTD = 0;
   282  0042  1283               	bcf	3,5	;RP0=0, select bank0
   283  0043  1303               	bcf	3,6	;RP1=0, select bank0
   284  0044  0188               	clrf	8	;volatile
   285  0045                     l24:	
   286                           ;main.c: 36:     while(1);
   287                           
   288  0045                     l25:
   289  0045  2845               	goto	l24
   290  0046  120A  118A  280C   	ljmp	start
   291  0049                     __end_of_main:
   292                           
   293                           	psect	text1
   294  0015                     __ptext1:	
   295 ;; *************** function _ISR *****************
   296 ;; Defined at:
   297 ;;		line 12 in file "main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, status,2, status,0
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   311 ;;      Params:         0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0
   313 ;;      Temps:          2       0       0       0       0
   314 ;;      Totals:         2       0       0       0       0
   315 ;;Total ram usage:        2 bytes
   316 ;; Hardware stack levels used: 1
   317 ;; This function calls:
   318 ;;		Nothing
   319 ;; This function is called by:
   320 ;;		Interrupt level 1
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           
   325                           ;psect for function _ISR
   326  0015                     _ISR:
   327  0015                     i1l619:
   328                           
   329                           ;main.c: 13:     static unsigned int counter = 0;;main.c: 14:     if(INTCONbits.INTF == 
      +                          1) {
   330  0015  1C8B               	btfss	11,1	;volatile
   331  0016  2818               	goto	u1_21
   332  0017  2819               	goto	u1_20
   333  0018                     u1_21:
   334  0018  2830               	goto	i1l19
   335  0019                     u1_20:
   336  0019                     i1l621:
   337                           
   338                           ;main.c: 15:         TMR0 = 5;
   339  0019  3005               	movlw	5
   340  001A  1283               	bcf	3,5	;RP0=0, select bank0
   341  001B  1303               	bcf	3,6	;RP1=0, select bank0
   342  001C  0081               	movwf	1	;volatile
   343  001D                     i1l623:
   344                           
   345                           ;main.c: 16:         INTCONbits.T0IF = 0;
   346  001D  110B               	bcf	11,2	;volatile
   347                           
   348                           ;main.c: 17:         counter++;
   349  001E  3001               	movlw	1
   350  001F  07F0               	addwf	ISR@counter,f
   351  0020  1803               	skipnc
   352  0021  0AF1               	incf	ISR@counter+1,f
   353  0022  3000               	movlw	0
   354  0023  07F1               	addwf	ISR@counter+1,f
   355  0024                     i1l625:
   356                           
   357                           ;main.c: 18:         if(counter == 1000){
   358  0024  30E8               	movlw	232
   359  0025  0670               	xorwf	ISR@counter,w
   360  0026  3003               	movlw	3
   361  0027  1903               	skipnz
   362  0028  0671               	xorwf	ISR@counter+1,w
   363  0029  1D03               	btfss	3,2
   364  002A  282C               	goto	u2_21
   365  002B  282D               	goto	u2_20
   366  002C                     u2_21:
   367  002C  2830               	goto	i1l19
   368  002D                     u2_20:
   369  002D                     i1l627:
   370                           
   371                           ;main.c: 19:             PORTD = ~PORTD;
   372  002D  0988               	comf	8,f	;volatile
   373  002E                     i1l629:
   374                           
   375                           ;main.c: 20:             counter = 0;
   376  002E  01F0               	clrf	ISR@counter
   377  002F  01F1               	clrf	ISR@counter+1
   378  0030                     i1l19:
   379  0030  0873               	movf	??_ISR+1,w
   380  0031  008A               	movwf	10
   381  0032  0E72               	swapf	??_ISR,w
   382  0033  0083               	movwf	3
   383  0034  0EFE               	swapf	btemp,f
   384  0035  0E7E               	swapf	btemp,w
   385  0036  0009               	retfie
   386  0037                     __end_of_ISR:
   387  007E                     btemp	set	126	;btemp
   388  007E                     wtemp0	set	126
   389                           
   390                           	psect	intentry
   391  0004                     __pintentry:	
   392                           ;incstack = 0
   393                           ; Regs used in _ISR: [wreg+status,2+status,0]
   394                           
   395  0004                     interrupt_function:
   396  007E                     saved_w	set	btemp
   397  0004  00FE               	movwf	btemp
   398  0005  0E03               	swapf	3,w
   399  0006  00F2               	movwf	??_ISR
   400  0007  080A               	movf	10,w
   401  0008  00F3               	movwf	??_ISR+1
   402  0009  120A  118A  2815   	ljmp	_ISR
   403                           
   404                           	psect	config
   405                           
   406                           ;Config register CONFIG @ 0x2007
   407                           ;	Oscillator Selection bits
   408                           ;	FOSC = HS, HS oscillator
   409                           ;	Watchdog Timer Enable bit
   410                           ;	WDTE = OFF, WDT disabled
   411                           ;	Power-up Timer Enable bit
   412                           ;	PWRTE = OFF, PWRT disabled
   413                           ;	Brown-out Reset Enable bit
   414                           ;	BOREN = ON, BOR enabled
   415                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   416                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   417                           ;	Data EEPROM Memory Code Protection bit
   418                           ;	CPD = OFF, Data EEPROM code protection off
   419                           ;	Flash Program Memory Write Enable bits
   420                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   421                           ;	In-Circuit Debugger Mode bit
   422                           ;	DEBUG = 0x1, unprogrammed default
   423                           ;	Flash Program Memory Code Protection bit
   424                           ;	CP = OFF, Code protection off
   425  2007                     	org	8199
   426  2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 24 14:53:24 2021

                     l24 0045                       l25 0045                      l631 0037  
                    l633 0041                      _ISR 0015                     ?_ISR 0072  
                   i1l19 0030                     _TMR0 0001                     u1_20 0019  
                   u1_21 0018                     u2_20 002D                     u2_21 002C  
                   _main 0037                     btemp 007E                     start 000C  
                  ??_ISR 0072                    ?_main 0072                    i1l621 0019  
                  i1l623 001D                    i1l625 0024                    i1l627 002D  
                  i1l619 0015                    i1l629 002E                    _PORTD 0008  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0049  
                 ??_main 0074                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0072           _OPTION_REGbits 0081               __pmaintext 0037  
             __pintentry 0004                  __ptext1 0015             __size_of_ISR 0022  
   end_of_initialization 0011      start_initialization 000F              __end_of_ISR 0037  
            __pbssCOMMON 0070                ___latbits 0002               ISR@counter 0070  
      interrupt_function 0004            __size_of_main 0012               _INTCONbits 000B  
               intlevel1 0000  
